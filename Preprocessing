{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":50160,"databundleVersionId":7921029,"sourceType":"competition"}],"dockerImageVersionId":30635,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import polars as pl\nimport numpy as np\nimport pandas as pd\nfrom typing import Union\n\nparent_path = \"/kaggle/input/home-credit-credit-risk-model-stability\"","metadata":{"execution":{"iopub.status.busy":"2024-04-30T04:08:55.005456Z","iopub.execute_input":"2024-04-30T04:08:55.005885Z","iopub.status.idle":"2024-04-30T04:08:56.676116Z","shell.execute_reply.started":"2024-04-30T04:08:55.005853Z","shell.execute_reply":"2024-04-30T04:08:56.674650Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"code","source":"# utils\n\ndef set_table_dtypes(df: pl.DataFrame) -> pl.DataFrame:\n    \"\"\"Automatically sets the type for each column in the polar dataframe\"\"\"\n    for col in df.columns:\n        # last letter of column name will help you determine the type\n        if col[-1] in (\"P\", \"A\"):\n            df = df.with_columns(pl.col(col).cast(pl.Float64).alias(col))\n    return df\n\ndef convert_strings(df: pd.DataFrame) -> pd.DataFrame:\n    \"\"\"GBM Algorithms can use string columns only after being converted to a Categorical Dtype, so this does that automatically.\"\"\"\n    for col in df.columns:  \n        if df[col].dtype.name in ['object', 'string']:\n            df[col] = df[col].astype(\"string\").astype('category')\n            current_categories = df[col].cat.categories\n            new_categories = current_categories.to_list() + [\"Unknown\"]\n            new_dtype = pd.CategoricalDtype(categories=new_categories, ordered=True)\n            df[col] = df[col].astype(new_dtype)\n    return df\n\ndef read_pl(paths: Union[list[str],str] ):\n    \"\"\" Reads in multiple file paths to make a single polar dataframe. Also supports a single file.\"\"\"\n    if isinstance(paths,str):\n        return pl.read_csv(f\"{parent_path}/{paths}\").pipe(set_table_dtypes)\n    else:\n        return pl.concat([ pl.read_csv(f\"{parent_path}/{file_path}\").pipe(set_table_dtypes) for file_path in paths],how=\"vertical_relaxed\")\n","metadata":{"execution":{"iopub.status.busy":"2024-04-30T04:08:56.678759Z","iopub.execute_input":"2024-04-30T04:08:56.679513Z","iopub.status.idle":"2024-04-30T04:08:56.693973Z","shell.execute_reply.started":"2024-04-30T04:08:56.679458Z","shell.execute_reply":"2024-04-30T04:08:56.692569Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":"# Load Datasets","metadata":{}},{"cell_type":"markdown","source":"[Data Info](https://www.kaggle.com/competitions/home-credit-credit-risk-model-stability/data)\n\n* depth=0 - These are static features directly tied to a specific case_id.\n* depth=1 - Each case_id has an associated historical record, indexed by num_group1.\n* depth=2 - Each case_id has an associated historical record, indexed by both num_group1 and num_group2.","metadata":{}},{"cell_type":"code","source":"# use this to know what the features are \nfeat_info = pd.read_csv(f\"{parent_path}/feature_definitions.csv\")\nfeat_info.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-30T04:08:56.695864Z","iopub.execute_input":"2024-04-30T04:08:56.696239Z","iopub.status.idle":"2024-04-30T04:08:56.772704Z","shell.execute_reply.started":"2024-04-30T04:08:56.696207Z","shell.execute_reply":"2024-04-30T04:08:56.771078Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"                  Variable                                        Description\n0           actualdpd_943P  Days Past Due (DPD) of previous contract (actu...\n1  actualdpdtolerance_344P                      DPD of client with tolerance.\n2     addres_district_368M                  District of the person's address.\n3         addres_role_871L                          Role of person's address.\n4          addres_zip_823M                           Zip code of the address.","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Variable</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>actualdpd_943P</td>\n      <td>Days Past Due (DPD) of previous contract (actu...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>actualdpdtolerance_344P</td>\n      <td>DPD of client with tolerance.</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>addres_district_368M</td>\n      <td>District of the person's address.</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>addres_role_871L</td>\n      <td>Role of person's address.</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>addres_zip_823M</td>\n      <td>Zip code of the address.</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Base tables store the basic information about the observation and case_id. \n# This is a unique identification of every observation and you need to use it to join the other tables to base tables.\n# depth=0, internal data source\ntrain_base = read_pl(\"csv_files/train/train_base.csv\")\ntest_base  = read_pl(\"csv_files/test/test_base.csv\")\ntrain_base.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T04:09:01.108191Z","iopub.execute_input":"2024-04-30T04:09:01.108625Z","iopub.status.idle":"2024-04-30T04:09:01.907974Z","shell.execute_reply.started":"2024-04-30T04:09:01.108592Z","shell.execute_reply":"2024-04-30T04:09:01.906851Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"shape: (2, 5)\n┌─────────┬───────────────┬────────┬──────────┬────────┐\n│ case_id ┆ date_decision ┆ MONTH  ┆ WEEK_NUM ┆ target │\n│ ---     ┆ ---           ┆ ---    ┆ ---      ┆ ---    │\n│ i64     ┆ str           ┆ i64    ┆ i64      ┆ i64    │\n╞═════════╪═══════════════╪════════╪══════════╪════════╡\n│ 0       ┆ 2019-01-03    ┆ 201901 ┆ 0        ┆ 0      │\n│ 1       ┆ 2019-01-03    ┆ 201901 ┆ 0        ┆ 0      │\n└─────────┴───────────────┴────────┴──────────┴────────┘","text/html":"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (2, 5)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>case_id</th><th>date_decision</th><th>MONTH</th><th>WEEK_NUM</th><th>target</th></tr><tr><td>i64</td><td>str</td><td>i64</td><td>i64</td><td>i64</td></tr></thead><tbody><tr><td>0</td><td>&quot;2019-01-03&quot;</td><td>201901</td><td>0</td><td>0</td></tr><tr><td>1</td><td>&quot;2019-01-03&quot;</td><td>201901</td><td>0</td><td>0</td></tr></tbody></table></div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## depth 0 ","metadata":{}},{"cell_type":"code","source":"# ?\n# depth=0, external data source\ntrain_static_noncb  = read_pl([\"csv_files/train/train_static_0_0.csv\",\"csv_files/train/train_static_0_1.csv\"])\ntest_static_noncb   = read_pl([\"csv_files/test/test_static_0_0.csv\",\"csv_files/test/test_static_0_1.csv\",\"csv_files/test/test_static_0_2.csv\"])\ntrain_static_noncb.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T04:09:15.106366Z","iopub.execute_input":"2024-04-30T04:09:15.106798Z","iopub.status.idle":"2024-04-30T04:09:27.089901Z","shell.execute_reply.started":"2024-04-30T04:09:15.106762Z","shell.execute_reply":"2024-04-30T04:09:27.088635Z"},"trusted":true},"execution_count":6,"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"shape: (2, 168)\n┌─────────┬────────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬───────────┐\n│ case_id ┆ actualdpdt ┆ amtinstpa ┆ annuity_7 ┆ … ┆ totinstal ┆ twobodfil ┆ typesuite ┆ validfrom │\n│ ---     ┆ olerance_3 ┆ idbefduel ┆ 80A       ┆   ┆ last1m_45 ┆ ling_608L ┆ _864L     ┆ _1069D    │\n│ i64     ┆ 44P        ┆ 24m_41871 ┆ ---       ┆   ┆ 25188A    ┆ ---       ┆ ---       ┆ ---       │\n│         ┆ ---        ┆ 15A       ┆ f64       ┆   ┆ ---       ┆ str       ┆ str       ┆ str       │\n│         ┆ f64        ┆ ---       ┆           ┆   ┆ f64       ┆           ┆           ┆           │\n│         ┆            ┆ f64       ┆           ┆   ┆           ┆           ┆           ┆           │\n╞═════════╪════════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪═══════════╡\n│ 0       ┆ null       ┆ null      ┆ 1917.6    ┆ … ┆ null      ┆ BO        ┆ null      ┆ null      │\n│ 1       ┆ null       ┆ null      ┆ 3134.0    ┆ … ┆ null      ┆ BO        ┆ null      ┆ null      │\n└─────────┴────────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴───────────┘","text/html":"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (2, 168)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>case_id</th><th>actualdpdtolerance_344P</th><th>amtinstpaidbefduel24m_4187115A</th><th>annuity_780A</th><th>annuitynextmonth_57A</th><th>applicationcnt_361L</th><th>applications30d_658L</th><th>applicationscnt_1086L</th><th>applicationscnt_464L</th><th>applicationscnt_629L</th><th>applicationscnt_867L</th><th>avgdbddpdlast24m_3658932P</th><th>avgdbddpdlast3m_4187120P</th><th>avgdbdtollast24m_4525197P</th><th>avgdpdtolclosure24_3658938P</th><th>avginstallast24m_3658937A</th><th>avglnamtstart24m_4525187A</th><th>avgmaxdpdlast9m_3716943P</th><th>avgoutstandbalancel6m_4187114A</th><th>avgpmtlast12m_4525200A</th><th>bankacctype_710L</th><th>cardtype_51L</th><th>clientscnt12m_3712952L</th><th>clientscnt3m_3712950L</th><th>clientscnt6m_3712949L</th><th>clientscnt_100L</th><th>clientscnt_1022L</th><th>clientscnt_1071L</th><th>clientscnt_1130L</th><th>clientscnt_136L</th><th>clientscnt_157L</th><th>clientscnt_257L</th><th>clientscnt_304L</th><th>clientscnt_360L</th><th>clientscnt_493L</th><th>clientscnt_533L</th><th>clientscnt_887L</th><th>&hellip;</th><th>numinstpaidearlyest_4493214L</th><th>numinstpaidlastcontr_4325080L</th><th>numinstpaidlate1d_3546852L</th><th>numinstregularpaid_973L</th><th>numinstregularpaidest_4493210L</th><th>numinsttopaygr_769L</th><th>numinsttopaygrest_4493213L</th><th>numinstunpaidmax_3546851L</th><th>numinstunpaidmaxest_4493212L</th><th>numnotactivated_1143L</th><th>numpmtchanneldd_318L</th><th>numrejects9m_859L</th><th>opencred_647L</th><th>paytype1st_925L</th><th>paytype_783L</th><th>payvacationpostpone_4187118D</th><th>pctinstlsallpaidearl3d_427L</th><th>pctinstlsallpaidlat10d_839L</th><th>pctinstlsallpaidlate1d_3546856L</th><th>pctinstlsallpaidlate4d_3546849L</th><th>pctinstlsallpaidlate6d_3546844L</th><th>pmtnum_254L</th><th>posfpd10lastmonth_333P</th><th>posfpd30lastmonth_3976960P</th><th>posfstqpd30lastmonth_3976962P</th><th>previouscontdistrict_112M</th><th>price_1097A</th><th>sellerplacecnt_915L</th><th>sellerplacescnt_216L</th><th>sumoutstandtotal_3546847A</th><th>sumoutstandtotalest_4493215A</th><th>totaldebt_9A</th><th>totalsettled_863A</th><th>totinstallast1m_4525188A</th><th>twobodfilling_608L</th><th>typesuite_864L</th><th>validfrom_1069D</th></tr><tr><td>i64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>str</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>&hellip;</td><td>str</td><td>str</td><td>f64</td><td>f64</td><td>str</td><td>f64</td><td>str</td><td>f64</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>bool</td><td>str</td><td>str</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>str</td><td>str</td><td>str</td></tr></thead><tbody><tr><td>0</td><td>null</td><td>null</td><td>1917.6</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>null</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>&hellip;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>0.0</td><td>0.0</td><td>0.0</td><td>null</td><td>&quot;OTHER&quot;</td><td>&quot;OTHER&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>24.0</td><td>0.0</td><td>0.0</td><td>null</td><td>&quot;a55475b1&quot;</td><td>null</td><td>0.0</td><td>0.0</td><td>null</td><td>null</td><td>0.0</td><td>0.0</td><td>null</td><td>&quot;BO&quot;</td><td>null</td><td>null</td></tr><tr><td>1</td><td>null</td><td>null</td><td>3134.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>&quot;0.0&quot;</td><td>3.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0.0</td><td>&hellip;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>0.0</td><td>0.0</td><td>0.0</td><td>null</td><td>&quot;OTHER&quot;</td><td>&quot;OTHER&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>18.0</td><td>0.0</td><td>0.0</td><td>null</td><td>&quot;a55475b1&quot;</td><td>null</td><td>0.0</td><td>0.0</td><td>null</td><td>null</td><td>0.0</td><td>0.0</td><td>null</td><td>&quot;BO&quot;</td><td>null</td><td>null</td></tr></tbody></table></div>"},"metadata":{}}]},{"cell_type":"code","source":"# ?\n# depth=0, external data source\ntrain_static_cb  = read_pl(\"csv_files/train/train_static_cb_0.csv\")\ntest_static_cb   = read_pl(\"csv_files/test/test_static_cb_0.csv\")\ntrain_static_cb.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T03:47:39.665121Z","iopub.execute_input":"2024-04-30T03:47:39.666341Z","iopub.status.idle":"2024-04-30T03:47:41.941756Z","shell.execute_reply.started":"2024-04-30T03:47:39.666266Z","shell.execute_reply":"2024-04-30T03:47:41.940485Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"shape: (2, 53)\n┌─────────┬────────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬───────────┐\n│ case_id ┆ assignment ┆ assignmen ┆ assignmen ┆ … ┆ riskasses ┆ riskasses ┆ secondqua ┆ thirdquar │\n│ ---     ┆ date_238D  ┆ tdate_452 ┆ tdate_495 ┆   ┆ ment_302T ┆ ment_940T ┆ rter_766L ┆ ter_1082L │\n│ i64     ┆ ---        ┆ 7235D     ┆ 5616D     ┆   ┆ ---       ┆ ---       ┆ ---       ┆ ---       │\n│         ┆ str        ┆ ---       ┆ ---       ┆   ┆ str       ┆ f64       ┆ f64       ┆ f64       │\n│         ┆            ┆ str       ┆ str       ┆   ┆           ┆           ┆           ┆           │\n╞═════════╪════════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪═══════════╡\n│ 357     ┆ null       ┆ null      ┆ null      ┆ … ┆ null      ┆ null      ┆ null      ┆ null      │\n│ 381     ┆ null       ┆ null      ┆ null      ┆ … ┆ null      ┆ null      ┆ null      ┆ null      │\n└─────────┴────────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴───────────┘","text/html":"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (2, 53)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>case_id</th><th>assignmentdate_238D</th><th>assignmentdate_4527235D</th><th>assignmentdate_4955616D</th><th>birthdate_574D</th><th>contractssum_5085716L</th><th>dateofbirth_337D</th><th>dateofbirth_342D</th><th>days120_123L</th><th>days180_256L</th><th>days30_165L</th><th>days360_512L</th><th>days90_310L</th><th>description_5085714M</th><th>education_1103M</th><th>education_88M</th><th>firstquarter_103L</th><th>for3years_128L</th><th>for3years_504L</th><th>for3years_584L</th><th>formonth_118L</th><th>formonth_206L</th><th>formonth_535L</th><th>forquarter_1017L</th><th>forquarter_462L</th><th>forquarter_634L</th><th>fortoday_1092L</th><th>forweek_1077L</th><th>forweek_528L</th><th>forweek_601L</th><th>foryear_618L</th><th>foryear_818L</th><th>foryear_850L</th><th>fourthquarter_440L</th><th>maritalst_385M</th><th>maritalst_893M</th><th>numberofqueries_373L</th><th>pmtaverage_3A</th><th>pmtaverage_4527227A</th><th>pmtaverage_4955615A</th><th>pmtcount_4527229L</th><th>pmtcount_4955617L</th><th>pmtcount_693L</th><th>pmtscount_423L</th><th>pmtssum_45A</th><th>requesttype_4525192L</th><th>responsedate_1012D</th><th>responsedate_4527233D</th><th>responsedate_4917613D</th><th>riskassesment_302T</th><th>riskassesment_940T</th><th>secondquarter_766L</th><th>thirdquarter_1082L</th></tr><tr><td>i64</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>str</td><td>str</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>str</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>str</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>f64</td><td>f64</td><td>f64</td></tr></thead><tbody><tr><td>357</td><td>null</td><td>null</td><td>null</td><td>&quot;1988-04-01&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>6.0</td><td>6301.4</td><td>null</td><td>&quot;2019-01-25&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td></tr><tr><td>381</td><td>null</td><td>null</td><td>null</td><td>&quot;1973-11-01&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>6.0</td><td>4019.6</td><td>null</td><td>&quot;2019-01-25&quot;</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td><td>null</td></tr></tbody></table></div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## depth 1","metadata":{}},{"cell_type":"code","source":"# ?\n# depth=1, internal data source\ntrain_applprev  = read_pl([\"csv_files/train/train_applprev_1_0.csv\",\"csv_files/train/train_applprev_1_1.csv\"])\ntest_applprev   = read_pl([\"csv_files/test/test_applprev_1_0.csv\",\"csv_files/test/test_applprev_1_1.csv\",\"csv_files/test/test_applprev_1_2.csv\"])\ntrain_applprev.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T03:53:45.489001Z","iopub.execute_input":"2024-04-30T03:53:45.489512Z","iopub.status.idle":"2024-04-30T03:53:56.974426Z","shell.execute_reply.started":"2024-04-30T03:53:45.489478Z","shell.execute_reply":"2024-04-30T03:53:56.973174Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"shape: (2, 41)\n┌─────────┬────────────┬───────────┬───────────┬───┬───────────┬───────────┬───────────┬───────────┐\n│ case_id ┆ actualdpd_ ┆ annuity_8 ┆ approvald ┆ … ┆ rejectrea ┆ revolving ┆ status_21 ┆ tenor_203 │\n│ ---     ┆ 943P       ┆ 53A       ┆ ate_319D  ┆   ┆ sonclient ┆ account_3 ┆ 9L        ┆ L         │\n│ i64     ┆ ---        ┆ ---       ┆ ---       ┆   ┆ _4145042M ┆ 94A       ┆ ---       ┆ ---       │\n│         ┆ f64        ┆ f64       ┆ str       ┆   ┆ ---       ┆ ---       ┆ str       ┆ f64       │\n│         ┆            ┆           ┆           ┆   ┆ str       ┆ f64       ┆           ┆           │\n╞═════════╪════════════╪═══════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪═══════════╡\n│ 2       ┆ 0.0        ┆ 640.2     ┆ null      ┆ … ┆ a55475b1  ┆ null      ┆ D         ┆ 24.0      │\n│ 2       ┆ 0.0        ┆ 1682.4    ┆ null      ┆ … ┆ a55475b1  ┆ null      ┆ D         ┆ 12.0      │\n└─────────┴────────────┴───────────┴───────────┴───┴───────────┴───────────┴───────────┴───────────┘","text/html":"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (2, 41)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>case_id</th><th>actualdpd_943P</th><th>annuity_853A</th><th>approvaldate_319D</th><th>byoccupationinc_3656910L</th><th>cancelreason_3545846M</th><th>childnum_21L</th><th>creationdate_885D</th><th>credacc_actualbalance_314A</th><th>credacc_credlmt_575A</th><th>credacc_maxhisbal_375A</th><th>credacc_minhisbal_90A</th><th>credacc_status_367L</th><th>credacc_transactions_402L</th><th>credamount_590A</th><th>credtype_587L</th><th>currdebt_94A</th><th>dateactivated_425D</th><th>district_544M</th><th>downpmt_134A</th><th>dtlastpmt_581D</th><th>dtlastpmtallstes_3545839D</th><th>education_1138M</th><th>employedfrom_700D</th><th>familystate_726L</th><th>firstnonzeroinstldate_307D</th><th>inittransactioncode_279L</th><th>isbidproduct_390L</th><th>isdebitcard_527L</th><th>mainoccupationinc_437A</th><th>maxdpdtolerance_577P</th><th>num_group1</th><th>outstandingdebt_522A</th><th>pmtnum_8L</th><th>postype_4733339M</th><th>profession_152M</th><th>rejectreason_755M</th><th>rejectreasonclient_4145042M</th><th>revolvingaccount_394A</th><th>status_219L</th><th>tenor_203L</th></tr><tr><td>i64</td><td>f64</td><td>f64</td><td>str</td><td>f64</td><td>str</td><td>f64</td><td>str</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>str</td><td>f64</td><td>f64</td><td>str</td><td>f64</td><td>str</td><td>str</td><td>f64</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>str</td><td>bool</td><td>bool</td><td>f64</td><td>f64</td><td>i64</td><td>f64</td><td>f64</td><td>str</td><td>str</td><td>str</td><td>str</td><td>f64</td><td>str</td><td>f64</td></tr></thead><tbody><tr><td>2</td><td>0.0</td><td>640.2</td><td>null</td><td>null</td><td>&quot;a55475b1&quot;</td><td>0.0</td><td>&quot;2013-04-03&quot;</td><td>null</td><td>0.0</td><td>null</td><td>null</td><td>null</td><td>null</td><td>10000.0</td><td>&quot;CAL&quot;</td><td>null</td><td>null</td><td>&quot;P136_108_173&quot;</td><td>0.0</td><td>null</td><td>null</td><td>&quot;P97_36_170&quot;</td><td>&quot;2010-02-15&quot;</td><td>&quot;SINGLE&quot;</td><td>&quot;2013-05-04&quot;</td><td>&quot;CASH&quot;</td><td>false</td><td>null</td><td>8200.0</td><td>null</td><td>0</td><td>null</td><td>24.0</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>null</td><td>&quot;D&quot;</td><td>24.0</td></tr><tr><td>2</td><td>0.0</td><td>1682.4</td><td>null</td><td>null</td><td>&quot;a55475b1&quot;</td><td>0.0</td><td>&quot;2013-04-03&quot;</td><td>null</td><td>0.0</td><td>null</td><td>null</td><td>null</td><td>null</td><td>16000.0</td><td>&quot;CAL&quot;</td><td>null</td><td>null</td><td>&quot;P136_108_173&quot;</td><td>0.0</td><td>null</td><td>null</td><td>&quot;P97_36_170&quot;</td><td>&quot;2010-02-15&quot;</td><td>&quot;SINGLE&quot;</td><td>&quot;2013-05-04&quot;</td><td>&quot;CASH&quot;</td><td>false</td><td>null</td><td>8200.0</td><td>null</td><td>1</td><td>null</td><td>12.0</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>&quot;a55475b1&quot;</td><td>null</td><td>&quot;D&quot;</td><td>12.0</td></tr></tbody></table></div>"},"metadata":{}}]},{"cell_type":"code","source":"# ?\n# depth=1, internal data source\ntrain_other  = read_pl(\"csv_files/train/train_other_1.csv\")\ntest_other   = read_pl(\"csv_files/test/test_other_1.csv\")\ntrain_other.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T03:54:04.139753Z","iopub.execute_input":"2024-04-30T03:54:04.140173Z","iopub.status.idle":"2024-04-30T03:54:04.165690Z","shell.execute_reply.started":"2024-04-30T03:54:04.140139Z","shell.execute_reply":"2024-04-30T03:54:04.164801Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"shape: (2, 7)\n┌─────────┬───────────────┬──────────────┬──────────────┬──────────────┬──────────────┬────────────┐\n│ case_id ┆ amtdebitincom ┆ amtdebitoutg ┆ amtdepositba ┆ amtdepositin ┆ amtdepositou ┆ num_group1 │\n│ ---     ┆ ing_4809443A  ┆ oing_4809440 ┆ lance_480944 ┆ coming_48094 ┆ tgoing_48094 ┆ ---        │\n│ i64     ┆ ---           ┆ A            ┆ 1A           ┆ 44A          ┆ 42A          ┆ i64        │\n│         ┆ f64           ┆ ---          ┆ ---          ┆ ---          ┆ ---          ┆            │\n│         ┆               ┆ f64          ┆ f64          ┆ f64          ┆ f64          ┆            │\n╞═════════╪═══════════════╪══════════════╪══════════════╪══════════════╪══════════════╪════════════╡\n│ 43801   ┆ 12466.601     ┆ 12291.2      ┆ 914.2        ┆ 0.0          ┆ 304.80002    ┆ 0          │\n│ 43991   ┆ 3333.4001     ┆ 3273.4001    ┆ 0.0          ┆ 0.0          ┆ 0.0          ┆ 0          │\n└─────────┴───────────────┴──────────────┴──────────────┴──────────────┴──────────────┴────────────┘","text/html":"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (2, 7)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>case_id</th><th>amtdebitincoming_4809443A</th><th>amtdebitoutgoing_4809440A</th><th>amtdepositbalance_4809441A</th><th>amtdepositincoming_4809444A</th><th>amtdepositoutgoing_4809442A</th><th>num_group1</th></tr><tr><td>i64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>f64</td><td>i64</td></tr></thead><tbody><tr><td>43801</td><td>12466.601</td><td>12291.2</td><td>914.2</td><td>0.0</td><td>304.80002</td><td>0</td></tr><tr><td>43991</td><td>3333.4001</td><td>3273.4001</td><td>0.0</td><td>0.0</td><td>0.0</td><td>0</td></tr></tbody></table></div>"},"metadata":{}}]},{"cell_type":"code","source":"# ?\n# depth=1, external data source, Tax registry provider A\ntrain_tax_a  = read_pl(\"csv_files/train/train_tax_registry_a_1.csv\")\ntest_tax_a   = read_pl(\"csv_files/test/test_tax_registry_a_1.csv\")\ntrain_tax_a.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T03:56:09.036700Z","iopub.execute_input":"2024-04-30T03:56:09.037236Z","iopub.status.idle":"2024-04-30T03:56:10.043742Z","shell.execute_reply.started":"2024-04-30T03:56:09.037198Z","shell.execute_reply":"2024-04-30T03:56:10.042403Z"},"trusted":true},"execution_count":24,"outputs":[{"execution_count":24,"output_type":"execute_result","data":{"text/plain":"shape: (2, 5)\n┌─────────┬─────────────────┬───────────────┬────────────┬─────────────────────┐\n│ case_id ┆ amount_4527230A ┆ name_4527232M ┆ num_group1 ┆ recorddate_4527225D │\n│ ---     ┆ ---             ┆ ---           ┆ ---        ┆ ---                 │\n│ i64     ┆ f64             ┆ str           ┆ i64        ┆ str                 │\n╞═════════╪═════════════════╪═══════════════╪════════════╪═════════════════════╡\n│ 28631   ┆ 711.0           ┆ f980a1ea      ┆ 3          ┆ 2019-09-13          │\n│ 28631   ┆ 1946.0          ┆ f980a1ea      ┆ 2          ┆ 2019-09-13          │\n└─────────┴─────────────────┴───────────────┴────────────┴─────────────────────┘","text/html":"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (2, 5)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>case_id</th><th>amount_4527230A</th><th>name_4527232M</th><th>num_group1</th><th>recorddate_4527225D</th></tr><tr><td>i64</td><td>f64</td><td>str</td><td>i64</td><td>str</td></tr></thead><tbody><tr><td>28631</td><td>711.0</td><td>&quot;f980a1ea&quot;</td><td>3</td><td>&quot;2019-09-13&quot;</td></tr><tr><td>28631</td><td>1946.0</td><td>&quot;f980a1ea&quot;</td><td>2</td><td>&quot;2019-09-13&quot;</td></tr></tbody></table></div>"},"metadata":{}}]},{"cell_type":"code","source":"# ?\n# depth=1, external data source, Tax registry provider B\ntrain_tax_b  = read_pl(\"csv_files/train/train_tax_registry_b_1.csv\")\ntest_tax_b   = read_pl(\"csv_files/test/test_tax_registry_b_1.csv\")\ntrain_tax_b.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T03:56:10.046192Z","iopub.execute_input":"2024-04-30T03:56:10.046940Z","iopub.status.idle":"2024-04-30T03:56:10.321019Z","shell.execute_reply.started":"2024-04-30T03:56:10.046892Z","shell.execute_reply":"2024-04-30T03:56:10.320141Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"shape: (2, 5)\n┌─────────┬─────────────────┬────────────────────────┬───────────────┬────────────┐\n│ case_id ┆ amount_4917619A ┆ deductiondate_4917603D ┆ name_4917606M ┆ num_group1 │\n│ ---     ┆ ---             ┆ ---                    ┆ ---           ┆ ---        │\n│ i64     ┆ f64             ┆ str                    ┆ str           ┆ i64        │\n╞═════════╪═════════════════╪════════════════════════╪═══════════════╪════════════╡\n│ 49435   ┆ 6885.0          ┆ 2019-10-16             ┆ 6b730375      ┆ 0          │\n│ 49435   ┆ 6885.0          ┆ 2019-10-16             ┆ 6b730375      ┆ 1          │\n└─────────┴─────────────────┴────────────────────────┴───────────────┴────────────┘","text/html":"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (2, 5)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>case_id</th><th>amount_4917619A</th><th>deductiondate_4917603D</th><th>name_4917606M</th><th>num_group1</th></tr><tr><td>i64</td><td>f64</td><td>str</td><td>str</td><td>i64</td></tr></thead><tbody><tr><td>49435</td><td>6885.0</td><td>&quot;2019-10-16&quot;</td><td>&quot;6b730375&quot;</td><td>0</td></tr><tr><td>49435</td><td>6885.0</td><td>&quot;2019-10-16&quot;</td><td>&quot;6b730375&quot;</td><td>1</td></tr></tbody></table></div>"},"metadata":{}}]},{"cell_type":"code","source":"# ?\n# depth=1, external data source, Tax registry provider C\ntrain_tax_c  = read_pl(\"csv_files/train/train_tax_registry_c_1.csv\")\ntest_tax_c   = read_pl(\"csv_files/test/test_tax_registry_c_1.csv\")\ntrain_tax_c.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T03:56:10.322640Z","iopub.execute_input":"2024-04-30T03:56:10.324006Z","iopub.status.idle":"2024-04-30T03:56:11.284209Z","shell.execute_reply.started":"2024-04-30T03:56:10.323954Z","shell.execute_reply":"2024-04-30T03:56:11.282732Z"},"trusted":true},"execution_count":26,"outputs":[{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"shape: (2, 5)\n┌─────────┬───────────────────┬────────────┬───────────────┬─────────────────────┐\n│ case_id ┆ employername_160M ┆ num_group1 ┆ pmtamount_36A ┆ processingdate_168D │\n│ ---     ┆ ---               ┆ ---        ┆ ---           ┆ ---                 │\n│ i64     ┆ str               ┆ i64        ┆ f64           ┆ str                 │\n╞═════════╪═══════════════════╪════════════╪═══════════════╪═════════════════════╡\n│ 357     ┆ c91b12ff          ┆ 0          ┆ 1200.0        ┆ 2019-01-04          │\n│ 357     ┆ c91b12ff          ┆ 1          ┆ 1200.0        ┆ 2018-11-28          │\n└─────────┴───────────────────┴────────────┴───────────────┴─────────────────────┘","text/html":"<div><style>\n.dataframe > thead > tr,\n.dataframe > tbody > tr {\n  text-align: right;\n  white-space: pre-wrap;\n}\n</style>\n<small>shape: (2, 5)</small><table border=\"1\" class=\"dataframe\"><thead><tr><th>case_id</th><th>employername_160M</th><th>num_group1</th><th>pmtamount_36A</th><th>processingdate_168D</th></tr><tr><td>i64</td><td>str</td><td>i64</td><td>f64</td><td>str</td></tr></thead><tbody><tr><td>357</td><td>&quot;c91b12ff&quot;</td><td>0</td><td>1200.0</td><td>&quot;2019-01-04&quot;</td></tr><tr><td>357</td><td>&quot;c91b12ff&quot;</td><td>1</td><td>1200.0</td><td>&quot;2018-11-28&quot;</td></tr></tbody></table></div>"},"metadata":{}}]},{"cell_type":"code","source":"# ?\n# depth=1, external data source, Credit bureau provider A\ntrain_cb_a1  = read_pl([\"csv_files/train/train_credit_bureau_a_1_0.csv\",\"csv_files/train/train_credit_bureau_a_1_1.csv\",\"csv_files/train/train_credit_bureau_a_1_2.csv\",\"csv_files/train/train_credit_bureau_a_1_3.csv\"])\ntest_cb_a1   = read_pl([\"csv_files/test/test_credit_bureau_a_1_0.csv\",\"csv_files/test/test_credit_bureau_a_1_1.csv\",\"csv_files/test/test_credit_bureau_a_1_2.csv\",\"csv_files/test/test_credit_bureau_a_1_3.csv\",\"csv_files/test/test_credit_bureau_a_1_4.csv\",])\ntrain_cb_a1.head(2)","metadata":{"execution":{"iopub.status.busy":"2024-04-30T04:03:22.538790Z","iopub.execute_input":"2024-04-30T04:03:22.539260Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ?\n# depth=1, external data source, Credit bureau provider B\ntrain_cb_b1  = read_pl(\"csv_files/train/train_credit_bureau_b_1.csv\")\ntest_cb_b1   = read_pl(\"csv_files/test/test_credit_bureau_b_1.csv\")\ntrain_cb_b1.head(2)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ?\n# depth=1, internal data source\ntrain_deposit  = read_pl(\"csv_files/train/train_deposit_1.csv\")\ntest_deposit   = read_pl(\"csv_files/test/test_deposit_1.csv\")\ntrain_deposit.head(2)","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ?\n# depth=1, internal data source\ntrain_person1  = read_pl(\"csv_files/train/train_person_1.csv\")\ntest_person1   = read_pl(\"csv_files/test/test_person_1.csv\")\ntrain_person.head(2)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ?\n# depth=1, internal data source\ntrain_debitcard  = read_pl(\"csv_files/train/train_debitcard_1.csv\")\ntest_debitcard   = read_pl(\"csv_files/test/test_debitcard_1.csv\")\ntrain_debitcard.head(2)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ?\n# depth=1, internal data source\ntrain_debitcard  = read_pl(\"csv_files/train/train_debitcard_1.csv\")\ntest_debitcard   = read_pl(\"csv_files/test/test_debitcard_1.csv\")\ntrain_debitcard.head(2)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## depth 2","metadata":{}},{"cell_type":"code","source":"# ?\n# depth=2, internal data source\ntrain_applprev2  = read_pl(\"csv_files/train/train_applprev_2.csv\")\ntest_applprev2   = read_pl(\"csv_files/test/test_applprev_2.csv\")\ntrain_applprev2.head(2)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ?\n# depth=2, internal data source\ntrain_person2  = read_pl(\"csv_files/train/train_person_2.csv\")\ntest_person2   = read_pl(\"csv_files/test/test_person_2.csv\")\ntrain_person2.head(2)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ?\n# depth=2, external data source, Credit bureau provider A\ntrain_cb_a2  = read_pl([\"csv_files/train/train_credit_bureau_a_2_0.csv\",\n                        \"csv_files/train/train_credit_bureau_a_2_1.csv\",\n                        \"csv_files/train/train_credit_bureau_a_2_2.csv\",\n                        \"csv_files/train/train_credit_bureau_a_2_3.csv\",\n                        \"csv_files/train/train_credit_bureau_a_2_4.csv\",\n                        \"csv_files/train/train_credit_bureau_a_2_5.csv\",\n                        \"csv_files/train/train_credit_bureau_a_2_6.csv\",\n                        \"csv_files/train/train_credit_bureau_a_2_7.csv\",\n                        \"csv_files/train/train_credit_bureau_a_2_8.csv\",\n                        \"csv_files/train/train_credit_bureau_a_2_9.csv\",\n                        \"csv_files/train/train_credit_bureau_a_2_10.csv\",])\n\ntest_cb_a2  = read_pl([ \"csv_files/test/test_credit_bureau_a_2_0.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_1.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_2.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_3.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_4.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_5.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_6.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_7.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_8.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_9.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_10.csv\",\n                        \"csv_files/test/test_credit_bureau_a_2_10.csv\",])\ntrain_cb_a2.head(2)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# ?\n# depth=2, external data source, Credit bureau provider B\ntrain_cb_b2  = read_pl(\"csv_files/train/train_credit_bureau_b_2.csv\")\ntest_cb_b2   = read_pl(\"csv_files/test/test_credit_bureau_b_2.csv\")\ntrain_cb_b2.head(2)","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# START OF EXAMPLE CODE","metadata":{}},{"cell_type":"code","source":"train_static  = read_pl([\"csv_files/train/train_static_0_0.csv\",\"csv_files/train/train_static_0_1.csv\"])\ntest_static   = read_pl([\"csv_files/test/test_static_0_0.csv\",\"csv_files/test/test_static_0_1.csv\",\"csv_files/test/test_static_0_2.csv\"])\ntrain_static.head()","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"train_basetable = pl.read_csv(dataPath + \"csv_files/train/train_base.csv\")\ntrain_static = pl.concat(\n    [\n        pl.read_csv(dataPath + \"csv_files/train/train_static_0_0.csv\").pipe(set_table_dtypes),\n        pl.read_csv(dataPath + \"csv_files/train/train_static_0_1.csv\").pipe(set_table_dtypes),\n    ],\n    how=\"vertical_relaxed\",\n)\ntrain_static_cb = pl.read_csv(dataPath + \"csv_files/train/train_static_cb_0.csv\").pipe(set_table_dtypes)\ntrain_person_1 = pl.read_csv(dataPath + \"csv_files/train/train_person_1.csv\").pipe(set_table_dtypes) \ntrain_credit_bureau_b_2 = pl.read_csv(dataPath + \"csv_files/train/train_credit_bureau_b_2.csv\").pipe(set_table_dtypes) ","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:24:54.749698Z","iopub.execute_input":"2024-02-07T21:24:54.751423Z","iopub.status.idle":"2024-02-07T21:25:16.159261Z","shell.execute_reply.started":"2024-02-07T21:24:54.751353Z","shell.execute_reply":"2024-02-07T21:25:16.158289Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_basetable = pl.read_csv(dataPath + \"csv_files/test/test_base.csv\")\ntest_static = pl.concat(\n    [\n        pl.read_csv(dataPath + \"csv_files/test/test_static_0_0.csv\").pipe(set_table_dtypes),\n        pl.read_csv(dataPath + \"csv_files/test/test_static_0_1.csv\").pipe(set_table_dtypes),\n        pl.read_csv(dataPath + \"csv_files/test/test_static_0_2.csv\").pipe(set_table_dtypes),\n    ],\n    how=\"vertical_relaxed\",\n)\ntest_static_cb = pl.read_csv(dataPath + \"csv_files/test/test_static_cb_0.csv\").pipe(set_table_dtypes)\ntest_person_1 = pl.read_csv(dataPath + \"csv_files/test/test_person_1.csv\").pipe(set_table_dtypes) \ntest_credit_bureau_b_2 = pl.read_csv(dataPath + \"csv_files/test/test_credit_bureau_b_2.csv\").pipe(set_table_dtypes) ","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:25:16.161619Z","iopub.execute_input":"2024-02-07T21:25:16.162856Z","iopub.status.idle":"2024-02-07T21:25:16.23912Z","shell.execute_reply.started":"2024-02-07T21:25:16.162811Z","shell.execute_reply":"2024-02-07T21:25:16.238115Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Feature engineering\n\nIn this part, we can see a simple example of joining tables via `case_id`. Here the loading and joining is done with polars library. Polars library is blazingly fast and has much smaller memory footprint than pandas. ","metadata":{}},{"cell_type":"code","source":"# We need to use aggregation functions in tables with depth > 1, so tables that contain num_group1 column or \n# also num_group2 column.\ntrain_person_1_feats_1 = train_person_1.group_by(\"case_id\").agg(\n    pl.col(\"mainoccupationinc_384A\").max().alias(\"mainoccupationinc_384A_max\"),\n    (pl.col(\"incometype_1044T\") == \"SELFEMPLOYED\").max().alias(\"mainoccupationinc_384A_any_selfemployed\")\n)\n\n# Here num_group1=0 has special meaning, it is the person who applied for the loan.\ntrain_person_1_feats_2 = train_person_1.select([\"case_id\", \"num_group1\", \"housetype_905L\"]).filter(\n    pl.col(\"num_group1\") == 0\n).drop(\"num_group1\").rename({\"housetype_905L\": \"person_housetype\"})\n\n# Here we have num_goup1 and num_group2, so we need to aggregate again.\ntrain_credit_bureau_b_2_feats = train_credit_bureau_b_2.group_by(\"case_id\").agg(\n    pl.col(\"pmts_pmtsoverdue_635A\").max().alias(\"pmts_pmtsoverdue_635A_max\"),\n    (pl.col(\"pmts_dpdvalue_108P\") > 31).max().alias(\"pmts_dpdvalue_108P_over31\")\n)\n\n# We will process in this examples only A-type and M-type columns, so we need to select them.\nselected_static_cols = []\nfor col in train_static.columns:\n    if col[-1] in (\"A\", \"M\"):\n        selected_static_cols.append(col)\nprint(selected_static_cols)\n\nselected_static_cb_cols = []\nfor col in train_static_cb.columns:\n    if col[-1] in (\"A\", \"M\"):\n        selected_static_cb_cols.append(col)\nprint(selected_static_cb_cols)\n\n# Join all tables together.\ndata = train_basetable.join(\n    train_static.select([\"case_id\"]+selected_static_cols), how=\"left\", on=\"case_id\"\n).join(\n    train_static_cb.select([\"case_id\"]+selected_static_cb_cols), how=\"left\", on=\"case_id\"\n).join(\n    train_person_1_feats_1, how=\"left\", on=\"case_id\"\n).join(\n    train_person_1_feats_2, how=\"left\", on=\"case_id\"\n).join(\n    train_credit_bureau_b_2_feats, how=\"left\", on=\"case_id\"\n)","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:25:16.24057Z","iopub.execute_input":"2024-02-07T21:25:16.24119Z","iopub.status.idle":"2024-02-07T21:25:18.454532Z","shell.execute_reply.started":"2024-02-07T21:25:16.241152Z","shell.execute_reply":"2024-02-07T21:25:18.452798Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"test_person_1_feats_1 = test_person_1.group_by(\"case_id\").agg(\n    pl.col(\"mainoccupationinc_384A\").max().alias(\"mainoccupationinc_384A_max\"),\n    (pl.col(\"incometype_1044T\") == \"SELFEMPLOYED\").max().alias(\"mainoccupationinc_384A_any_selfemployed\")\n)\n\ntest_person_1_feats_2 = test_person_1.select([\"case_id\", \"num_group1\", \"housetype_905L\"]).filter(\n    pl.col(\"num_group1\") == 0\n).drop(\"num_group1\").rename({\"housetype_905L\": \"person_housetype\"})\n\ntest_credit_bureau_b_2_feats = test_credit_bureau_b_2.group_by(\"case_id\").agg(\n    pl.col(\"pmts_pmtsoverdue_635A\").max().alias(\"pmts_pmtsoverdue_635A_max\"),\n    (pl.col(\"pmts_dpdvalue_108P\") > 31).max().alias(\"pmts_dpdvalue_108P_over31\")\n)\n\ndata_submission = test_basetable.join(\n    test_static.select([\"case_id\"]+selected_static_cols), how=\"left\", on=\"case_id\"\n).join(\n    test_static_cb.select([\"case_id\"]+selected_static_cb_cols), how=\"left\", on=\"case_id\"\n).join(\n    test_person_1_feats_1, how=\"left\", on=\"case_id\"\n).join(\n    test_person_1_feats_2, how=\"left\", on=\"case_id\"\n).join(\n    test_credit_bureau_b_2_feats, how=\"left\", on=\"case_id\"\n)","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:25:18.455848Z","iopub.execute_input":"2024-02-07T21:25:18.456308Z","iopub.status.idle":"2024-02-07T21:25:18.474933Z","shell.execute_reply.started":"2024-02-07T21:25:18.456258Z","shell.execute_reply":"2024-02-07T21:25:18.473491Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"case_ids = data[\"case_id\"].unique().shuffle(seed=1)\ncase_ids_train, case_ids_test = train_test_split(case_ids, train_size=0.6, random_state=1)\ncase_ids_valid, case_ids_test = train_test_split(case_ids_test, train_size=0.5, random_state=1)\n\ncols_pred = []\nfor col in data.columns:\n    if col[-1].isupper() and col[:-1].islower():\n        cols_pred.append(col)\n\nprint(cols_pred)\n\ndef from_polars_to_pandas(case_ids: pl.DataFrame) -> pl.DataFrame:\n    return (\n        data.filter(pl.col(\"case_id\").is_in(case_ids))[[\"case_id\", \"WEEK_NUM\", \"target\"]].to_pandas(),\n        data.filter(pl.col(\"case_id\").is_in(case_ids))[cols_pred].to_pandas(),\n        data.filter(pl.col(\"case_id\").is_in(case_ids))[\"target\"].to_pandas()\n    )\n\nbase_train, X_train, y_train = from_polars_to_pandas(case_ids_train)\nbase_valid, X_valid, y_valid = from_polars_to_pandas(case_ids_valid)\nbase_test, X_test, y_test = from_polars_to_pandas(case_ids_test)\n\nfor df in [X_train, X_valid, X_test]:\n    df = convert_strings(df)","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:25:18.47705Z","iopub.execute_input":"2024-02-07T21:25:18.477539Z","iopub.status.idle":"2024-02-07T21:25:28.525841Z","shell.execute_reply.started":"2024-02-07T21:25:18.477494Z","shell.execute_reply":"2024-02-07T21:25:28.524407Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"print(f\"Train: {X_train.shape}\")\nprint(f\"Valid: {X_valid.shape}\")\nprint(f\"Test: {X_test.shape}\")","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:25:28.52813Z","iopub.execute_input":"2024-02-07T21:25:28.529014Z","iopub.status.idle":"2024-02-07T21:25:28.534479Z","shell.execute_reply.started":"2024-02-07T21:25:28.528913Z","shell.execute_reply":"2024-02-07T21:25:28.53334Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Training LightGBM\n\nMinimal example of LightGBM training is shown below.","metadata":{}},{"cell_type":"code","source":"lgb_train = lgb.Dataset(X_train, label=y_train)\nlgb_valid = lgb.Dataset(X_valid, label=y_valid, reference=lgb_train)\n\nparams = {\n    \"boosting_type\": \"gbdt\",\n    \"objective\": \"binary\",\n    \"metric\": \"auc\",\n    \"max_depth\": 3,\n    \"num_leaves\": 31,\n    \"learning_rate\": 0.05,\n    \"feature_fraction\": 0.9,\n    \"bagging_fraction\": 0.8,\n    \"bagging_freq\": 5,\n    \"n_estimators\": 1000,\n    \"verbose\": -1,\n}\n\ngbm = lgb.train(\n    params,\n    lgb_train,\n    valid_sets=lgb_valid,\n    callbacks=[lgb.log_evaluation(50), lgb.early_stopping(10)]\n)","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:25:28.535756Z","iopub.execute_input":"2024-02-07T21:25:28.536641Z","iopub.status.idle":"2024-02-07T21:26:56.543315Z","shell.execute_reply.started":"2024-02-07T21:25:28.5366Z","shell.execute_reply":"2024-02-07T21:26:56.541627Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Evaluation with AUC and then comparison with the stability metric is shown below.","metadata":{}},{"cell_type":"code","source":"for base, X in [(base_train, X_train), (base_valid, X_valid), (base_test, X_test)]:\n    y_pred = gbm.predict(X, num_iteration=gbm.best_iteration)\n    base[\"score\"] = y_pred\n\nprint(f'The AUC score on the train set is: {roc_auc_score(base_train[\"target\"], base_train[\"score\"])}') \nprint(f'The AUC score on the valid set is: {roc_auc_score(base_valid[\"target\"], base_valid[\"score\"])}') \nprint(f'The AUC score on the test set is: {roc_auc_score(base_test[\"target\"], base_test[\"score\"])}')  ","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:26:56.547044Z","iopub.execute_input":"2024-02-07T21:26:56.547522Z","iopub.status.idle":"2024-02-07T21:27:22.5052Z","shell.execute_reply.started":"2024-02-07T21:26:56.547479Z","shell.execute_reply":"2024-02-07T21:27:22.503776Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"def gini_stability(base, w_fallingrate=88.0, w_resstd=-0.5):\n    gini_in_time = base.loc[:, [\"WEEK_NUM\", \"target\", \"score\"]]\\\n        .sort_values(\"WEEK_NUM\")\\\n        .groupby(\"WEEK_NUM\")[[\"target\", \"score\"]]\\\n        .apply(lambda x: 2*roc_auc_score(x[\"target\"], x[\"score\"])-1).tolist()\n    \n    x = np.arange(len(gini_in_time))\n    y = gini_in_time\n    a, b = np.polyfit(x, y, 1)\n    y_hat = a*x + b\n    residuals = y - y_hat\n    res_std = np.std(residuals)\n    avg_gini = np.mean(gini_in_time)\n    return avg_gini + w_fallingrate * min(0, a) + w_resstd * res_std\n\nstability_score_train = gini_stability(base_train)\nstability_score_valid = gini_stability(base_valid)\nstability_score_test = gini_stability(base_test)\n\nprint(f'The stability score on the train set is: {stability_score_train}') \nprint(f'The stability score on the valid set is: {stability_score_valid}') \nprint(f'The stability score on the test set is: {stability_score_test}')  ","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:27:22.506645Z","iopub.execute_input":"2024-02-07T21:27:22.507036Z","iopub.status.idle":"2024-02-07T21:27:23.796452Z","shell.execute_reply.started":"2024-02-07T21:27:22.507Z","shell.execute_reply":"2024-02-07T21:27:23.79501Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Submission\n\nScoring the submission dataset is below, we need to take care of new categories. Then we save the score as a last step. ","metadata":{}},{"cell_type":"code","source":"X_submission = data_submission[cols_pred].to_pandas()\nX_submission = convert_strings(X_submission)\ncategorical_cols = X_train.select_dtypes(include=['category']).columns\n\nfor col in categorical_cols:\n    train_categories = set(X_train[col].cat.categories)\n    submission_categories = set(X_submission[col].cat.categories)\n    new_categories = submission_categories - train_categories\n    X_submission.loc[X_submission[col].isin(new_categories), col] = \"Unknown\"\n    new_dtype = pd.CategoricalDtype(categories=train_categories, ordered=True)\n    X_train[col] = X_train[col].astype(new_dtype)\n    X_submission[col] = X_submission[col].astype(new_dtype)\n\ny_submission_pred = gbm.predict(X_submission, num_iteration=gbm.best_iteration)","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:27:23.798139Z","iopub.execute_input":"2024-02-07T21:27:23.798639Z","iopub.status.idle":"2024-02-07T21:27:23.946242Z","shell.execute_reply.started":"2024-02-07T21:27:23.798595Z","shell.execute_reply":"2024-02-07T21:27:23.944996Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"submission = pd.DataFrame({\n    \"case_id\": data_submission[\"case_id\"].to_numpy(),\n    \"score\": y_submission_pred\n}).set_index('case_id')\nsubmission.to_csv(\"./submission.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-02-07T21:27:23.947771Z","iopub.execute_input":"2024-02-07T21:27:23.948164Z","iopub.status.idle":"2024-02-07T21:27:23.96104Z","shell.execute_reply.started":"2024-02-07T21:27:23.948128Z","shell.execute_reply":"2024-02-07T21:27:23.959969Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"Best of luck, and most importantly, enjoy the process of learning and discovery! \n\n<img src=\"https://i.imgur.com/obVWIBh.png\" alt=\"Image\" width=\"700\"/>","metadata":{}}]}